<?xml version="1.0" encoding="UTF-8"?>
<model version="2.1.02" framework="qpn">
 <package name="rotatorsm" stereotype="0x02">
  <class name="Rotator" superclass="qpn::QActive">
   <attribute name="current_heading" type="int16_t" visibility="0x02" properties="0x00"/>
   <attribute name="target_heading" type="int16_t" visibility="0x02" properties="0x00"/>
   <attribute name="rotate_dir" type="int8_t" visibility="0x02" properties="0x00"/>
   <attribute name="rot_idx" type="int8_t" visibility="0x02" properties="0x00"/>
   <attribute name="dir_update_counter" type="uint8_t" visibility="0x02" properties="0x00"/>
   <attribute name="error" type="RotatorError" visibility="0x02" properties="0x00"/>
   <attribute name="prev_heading" type="int16_t" visibility="0x02" properties="0x00"/>
   <attribute name="wrong_dir_cnt" type="uint8_t" visibility="0x02" properties="0x00"/>
   <attribute name="heading_scale" type="int16_t" visibility="0x02" properties="0x00"/>
   <attribute name="heading_offset" type="int16_t" visibility="0x02" properties="0x00"/>
   <attribute name="stuck_cnt" type="uint8_t" visibility="0x02" properties="0x00"/>
   <attribute name="median_buf[3]" type="uint16_t" visibility="0x02" properties="0x00"/>
   <attribute name="median_head" type="uint8_t" visibility="0x02" properties="0x00"/>
   <attribute name="is_running" type="int8_t" visibility="0x02" properties="0x00"/>
   <statechart>
    <initial target="../1">
     <initial_glyph conn="22,4,4,0,4">
      <action box="0,-2,6,2"/>
     </initial_glyph>
    </initial>
    <state name="Idle">
     <entry>DEBUG_PRINT(&quot;Idle: ENTER\n&quot;);
me-&gt;rotate_dir = 0;</entry>
     <exit>DEBUG_PRINT(&quot;Idle: EXIT\n&quot;);</exit>
     <tran trig="CAL_ENABLE" target="../../2">
      <tran_glyph conn="8,43,2,0,12">
       <action box="1,1,9,2"/>
      </tran_glyph>
     </tran>
     <tran trig="ROTATE_CW">
      <choice guard="else" target="../../../3">
       <action>me-&gt;rotate_dir = 1;</action>
       <choice_glyph conn="57,22,5,3,22">
        <action box="2,-2,4,2"/>
       </choice_glyph>
      </choice>
      <choice guard="cw_limit_exceeded(me)" target="../..">
       <choice_glyph conn="57,22,4,1,3,-19">
        <action box="-17,1,15,2"/>
       </choice_glyph>
      </choice>
      <tran_glyph conn="38,22,1,-1,19">
       <action box="1,-2,9,2"/>
      </tran_glyph>
     </tran>
     <tran trig="ROTATE_CCW">
      <choice guard="else" target="../../../3">
       <action>me-&gt;rotate_dir = -1;</action>
       <choice_glyph conn="57,29,5,3,22">
        <action box="2,-2,4,2"/>
       </choice_glyph>
      </choice>
      <choice guard="ccw_limit_exceeded(me)" target="../..">
       <choice_glyph conn="57,29,4,1,3,-19">
        <action box="-17,1,16,2"/>
       </choice_glyph>
      </choice>
      <tran_glyph conn="38,29,1,-1,19">
       <action box="1,-2,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="ROTATOR_ERROR" target="../../4">
      <tran_glyph conn="35,43,2,0,12">
       <action box="1,1,13,2"/>
      </tran_glyph>
     </tran>
     <tran trig="Q_INIT">
      <action brief="error_if_not_calibrated">if (!is_calibrated(me)) {
  me-&gt;error = ROTATOR_ERROR_NO_CAL;
  QActive_post((QActive *)me, ROTATOR_ERROR_SIG, 0);
}</action>
      <tran_glyph conn="4,17,3,-1,25">
       <action box="1,-2,20,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="4,8,34,35">
      <entry box="1,2,5,2"/>
      <exit box="1,4,5,2"/>
     </state_glyph>
    </state>
    <state name="Calibrate">
     <entry>DEBUG_PRINT(&quot;Calibrate: ENTER\n&quot;);
//bsp_rotator_release_break(me-&gt;rot_idx);</entry>
     <exit>DEBUG_PRINT(&quot;Calibrate: EXIT\n&quot;);
bsp_rotator_stop(me-&gt;rot_idx);
//bsp_rotator_apply_break(me-&gt;rot_idx);
me-&gt;error = 0;
eeprom_write_config();</exit>
     <tran trig="CAL_DISABLE" target="../../1">
      <tran_glyph conn="22,55,0,2,-12">
       <action box="-10,-3,9,2"/>
      </tran_glyph>
     </tran>
     <tran trig="ROTATE_CW">
      <action>bsp_rotator_run_cw(me-&gt;rot_idx);</action>
      <tran_glyph conn="4,64,3,-1,15">
       <action box="1,-2,9,2"/>
      </tran_glyph>
     </tran>
     <tran trig="ROTATE_CCW">
      <action>bsp_rotator_run_ccw(me-&gt;rot_idx);</action>
      <tran_glyph conn="4,67,3,-1,15">
       <action box="1,-2,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="STOP">
      <action>bsp_rotator_stop(me-&gt;rot_idx);</action>
      <tran_glyph conn="4,70,3,-1,15">
       <action box="1,-2,4,2"/>
      </tran_glyph>
     </tran>
     <tran trig="SET_CCW_LIMIT">
      <action>Rotator_set_ccw_limit(me, Q_PAR(me));</action>
      <tran_glyph conn="4,73,3,-1,15">
       <action box="1,-2,11,2"/>
      </tran_glyph>
     </tran>
     <tran trig="SET_CW_LIMIT">
      <action>Rotator_set_cw_limit(me, Q_PAR(me));</action>
      <tran_glyph conn="4,76,3,-1,15">
       <action box="1,-2,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="4,55,22,25">
      <entry box="1,2,15,2"/>
      <exit box="1,4,15,2"/>
     </state_glyph>
    </state>
    <state name="BreakReleased">
     <entry brief="release_break">DEBUG_PRINT(&quot;BreakReleased: ENTER\n&quot;);
bsp_rotator_release_break(me-&gt;rot_idx);</entry>
     <exit brief="apply_break">DEBUG_PRINT(&quot;BreakReleased: EXIT\n&quot;);
me-&gt;rotate_dir = 0;
bsp_rotator_apply_break(me-&gt;rot_idx);</exit>
     <initial target="../5">
      <initial_glyph conn="112,9,5,0,2,4">
       <action box="0,-2,6,2"/>
      </initial_glyph>
     </initial>
     <tran trig="ROTATE_CW">
      <action>Rotator_set_rotate_dir(me, 1);</action>
      <tran_glyph conn="156,8,1,-1,-22">
       <action box="-14,-2,9,2"/>
      </tran_glyph>
     </tran>
     <tran trig="ROTATE_CCW">
      <action>Rotator_set_rotate_dir(me, -1);</action>
      <tran_glyph conn="156,11,1,-1,-22">
       <action box="-14,-2,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="ROTATOR_ERROR" target="../6">
      <action>Rotator_set_rotate_dir(me, 0);</action>
      <tran_glyph conn="156,76,1,1,-25">
       <action box="-24,-2,13,2"/>
      </tran_glyph>
     </tran>
     <tran trig="STOP">
      <action>Rotator_set_rotate_dir(me, 0);</action>
      <tran_glyph conn="156,14,1,-1,-22">
       <action box="-14,-2,4,2"/>
      </tran_glyph>
     </tran>
     <state name="StartWait">
      <entry>DEBUG_PRINT(&quot;StartWait: ENTER\n&quot;);
uint8_t start_wait = cfg.rot[me-&gt;rot_idx].start_wait;
if (start_wait &gt; 0) {
  QActive_arm((QActive *)me, start_wait);
}
else {
  QActive_post((QActive *)me, Q_TIMEOUT_SIG, 0);
}</entry>
      <exit>DEBUG_PRINT(&quot;StartWait: EXIT\n&quot;);</exit>
      <tran trig="Q_TIMEOUT" target="../../7">
       <tran_glyph conn="114,26,2,0,5">
        <action box="1,1,8,2"/>
       </tran_glyph>
      </tran>
      <tran trig="STOP" target="../../../1">
       <tran_glyph conn="99,17,3,1,-61">
        <action box="-16,-2,4,2"/>
       </tran_glyph>
      </tran>
      <state_glyph node="99,13,31,13">
       <entry box="1,2,5,2"/>
       <exit box="1,4,5,2"/>
      </state_glyph>
     </state>
     <state name="StopWait">
      <entry>DEBUG_PRINT(&quot;StopWait: ENTER\n&quot;);
uint8_t stop_wait = cfg.rot[me-&gt;rot_idx].stop_wait;
if (stop_wait &gt; 0) {
  QActive_arm((QActive *)me, stop_wait);
}
else {
  QActive_post((QActive *)me, Q_TIMEOUT_SIG, 0);
}</entry>
      <exit>DEBUG_PRINT(&quot;StopWait: EXIT\n&quot;);</exit>
      <tran trig="Q_TIMEOUT">
       <choice guard="me-&gt;error != ROTATOR_ERROR_OK" target="../../../../4">
        <choice_glyph conn="87,77,5,1,-33">
         <action box="-27,-4,18,4"/>
        </choice_glyph>
       </choice>
       <choice guard="else">
        <choice guard="else" target="../../../../7">
         <choice_glyph conn="87,68,4,2,-7">
          <action box="-4,-4,4,2"/>
         </choice_glyph>
        </choice>
        <choice guard="me-&gt;rotate_dir == 0" target="../../../../../1">
         <choice_glyph conn="87,68,5,1,-25,-32,-24">
          <action box="-23,-2,13,2"/>
         </choice_glyph>
        </choice>
        <choice_glyph conn="87,77,4,-1,-9">
         <action box="-4,-4,4,2"/>
        </choice_glyph>
       </choice>
       <tran_glyph conn="100,77,3,-1,-13">
        <action box="-10,-2,8,2"/>
       </tran_glyph>
      </tran>
      <state_glyph node="100,66,31,14">
       <entry box="1,2,5,2"/>
       <exit box="1,4,5,2"/>
      </state_glyph>
     </state>
     <state name="Running">
      <entry>DEBUG_PRINT(&quot;Running: ENTER\n&quot;);
Q_REQUIRE(me-&gt;rotate_dir != 0);
me-&gt;is_running = 1;
rotator_direction_updated(me-&gt;rot_idx, Rotator_adc2deg(me, me-&gt;current_heading));</entry>
      <exit>DEBUG_PRINT(&quot;Running: EXIT\n&quot;);
bsp_rotator_stop(me-&gt;rot_idx);
me-&gt;is_running = 0;
rotator_direction_updated(me-&gt;rot_idx, Rotator_adc2deg(me, me-&gt;current_heading));</exit>
      <tran trig="Q_INIT">
       <choice guard="else" target="../../3">
        <choice_glyph conn="117,40,5,0,-13,2">
         <action box="-6,-2,4,2"/>
        </choice_glyph>
       </choice>
       <choice guard="me-&gt;rotate_dir &gt; 0" target="../../4">
        <choice_glyph conn="117,40,5,0,17,2">
         <action box="2,-2,13,2"/>
        </choice_glyph>
       </choice>
       <tran_glyph conn="153,36,1,-1,-36,4">
        <action box="-7,-2,6,2"/>
       </tran_glyph>
      </tran>
      <tran trig="STOP" target="../../6">
       <action>Rotator_set_rotate_dir(me, 0);</action>
       <tran_glyph conn="115,61,2,0,5">
        <action box="1,1,4,2"/>
       </tran_glyph>
      </tran>
      <tran trig="ROTATION_LIMIT" target="../../6">
       <action>Rotator_set_rotate_dir(me, 0);</action>
       <tran_glyph conn="149,61,2,1,9,-18">
        <action box="-15,7,12,2"/>
       </tran_glyph>
      </tran>
      <state name="CCW">
       <entry>DEBUG_PRINT(&quot;CCW: ENTER\n&quot;);
bsp_rotator_run_ccw(me-&gt;rot_idx);</entry>
       <exit>DEBUG_PRINT(&quot;CCW: EXIT\n&quot;);</exit>
       <tran trig="ROTATE_CCW">
        <tran_glyph conn="90,51,3,-1,16">
         <action box="1,-2,10,2"/>
        </tran_glyph>
       </tran>
       <tran trig="ROTATE_CW" target="../../../6">
        <action>Rotator_set_rotate_dir(me, 1);</action>
        <tran_glyph conn="104,55,2,0,11">
         <action box="1,2,9,2"/>
        </tran_glyph>
       </tran>
       <state_glyph node="90,42,20,13">
        <entry box="1,2,5,2"/>
        <exit box="1,4,5,2"/>
       </state_glyph>
      </state>
      <state name="CW">
       <entry>DEBUG_PRINT(&quot;CW: ENTER\n&quot;);
bsp_rotator_run_cw(me-&gt;rot_idx);</entry>
       <exit>DEBUG_PRINT(&quot;CW: EXIT\n&quot;);</exit>
       <tran trig="ROTATE_CW">
        <tran_glyph conn="123,51,3,-1,17">
         <action box="1,-2,9,2"/>
        </tran_glyph>
       </tran>
       <tran trig="ROTATE_CCW" target="../../../6">
        <action>Rotator_set_rotate_dir(me, -1);</action>
        <tran_glyph conn="127,55,2,0,11">
         <action box="1,2,10,2"/>
        </tran_glyph>
       </tran>
       <state_glyph node="123,42,21,13">
        <entry box="1,2,5,2"/>
        <exit box="1,4,5,2"/>
       </state_glyph>
      </state>
      <state_glyph node="82,31,71,30">
       <entry box="1,2,5,2"/>
       <exit box="1,4,5,2"/>
      </state_glyph>
     </state>
     <state_glyph node="79,3,77,80">
      <entry box="1,2,15,2"/>
      <exit box="1,4,15,2"/>
     </state_glyph>
    </state>
    <state name="Error">
     <entry>DEBUG_PRINT(&quot;Error: ENTER\n&quot;);
me-&gt;rotate_dir = 0;
rotator_error(me-&gt;rot_idx, me-&gt;error);</entry>
     <exit>DEBUG_PRINT(&quot;Error: EXIT\n&quot;);
me-&gt;rotate_dir = 0;
me-&gt;error = ROTATOR_ERROR_OK;
rotator_error(me-&gt;rot_idx, me-&gt;error);</exit>
     <tran trig="ROTATE_CW">
      <action>rotator_error(me-&gt;rot_idx, me-&gt;error);
if (++me-&gt;rotate_dir == 2) {
  QActive_arm((QActive *)me, 30);
}</action>
      <tran_glyph conn="32,64,3,-1,16">
       <action box="1,-2,9,2"/>
      </tran_glyph>
     </tran>
     <tran trig="ROTATE_CCW">
      <action>rotator_error(me-&gt;rot_idx, me-&gt;error);
if (++me-&gt;rotate_dir == 2) {
  QActive_arm((QActive *)me, 30);
}</action>
      <tran_glyph conn="32,67,3,-1,16">
       <action box="1,-2,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="Q_TIMEOUT" target="../../1">
      <tran_glyph conn="51,55,0,1,-15,-13">
       <action box="-9,-3,8,2"/>
      </tran_glyph>
     </tran>
     <tran trig="STOP">
      <action>me-&gt;rotate_dir = 0;
QActive_disarm((QActive *)me);</action>
      <tran_glyph conn="32,70,3,-1,16">
       <action box="1,-2,4,2"/>
      </tran_glyph>
     </tran>
     <tran trig="CAL_ENABLE" target="../../2">
      <tran_glyph conn="43,80,2,2,4,-29,-4">
       <action box="-18,2,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="32,55,22,25">
      <entry box="1,2,5,2"/>
      <exit box="1,4,5,2"/>
     </state_glyph>
    </state>
    <state_diagram size="159,86"/>
   </statechart>
  </class>
 </package>
 <filesystem path=".">
  <file name="rotatorsm.c">
   <text>$define(rotatorsm::Rotator)</text>
  </file>
  <file name="rotatorsm.h">
   <text>$declare(rotatorsm::Rotator)</text>
  </file>
 </filesystem>
</model>
